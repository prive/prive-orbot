GSoC Plan 
=========

A tl;dr version 
---------------
I will be improving the Orbot UI/UX, and adding several features such as data statistics and also
implementing the TorCheck API. I plan on extending the ORLib library and also creating an ORLib enabled 
app as a sort of primer for other third party apps to follow

The full version
----------------

Orbot UI/UX
===========
At the moment, the Orbot UI/UX is clustered and not very intuitive. I plan on improving the existing 
elements of the UI and also add a variety of new features such as

* A new Set – up Wizard ( which checks for iptables )
* Changes to the preferences ( should be made to follow the Android guidelines)

Orbot Core app work
===================
At the moment, Orbot displays a successful connection without actually checking the connection. This is a 
pressing issue, because the user is not notified if the set-up has failed, unless he/she manually checks 
the torcheck web service. This should be made automatic by making using of the TorCheck API. Also, Orbot 
should be configured to show more information about the data being transmitted such as -

* Amount of data transferred
* Quality of the connection
* Number of circuits connected

ORLib
=====
Currently, ORLib is very minimal at the moment, both in term of features and support/documentation. ORLib 
is very critical to the use of Orbot as it provides transparent proxying on non-rooted devices ( A major 
chunk of android phones are un-rooted). I intend to -

* Improve the existing library by adding additional features
    * Check for existing of Orbot
    * Check status of connection to Tor
    * Provide option to start Orbot via intent
* Request hidden service by port, and get return hidden service .onion address
* Create an ORLib enabled “Twitter, Status.net or other micro blogging Client” – A sort of primer for 
  third-party apps
* Improve the documentation
